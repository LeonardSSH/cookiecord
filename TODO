Use https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-todo-plus to view this correctly.

done:
    inhibitors system with builtin funcs for common things (global ownerOnly etc) kinda like middleware:
        ✔ bot admin @done(20-02-01 14:59)
        ✔ channel type restrictions (guild only, dm only etc) @done(20-02-01 15:17)
        ✔ discord perm restrictions @done(20-02-01 15:34)
        ✔ cooldowns @done(20-02-02 11:11)
    ✔ (custom) error handling for cmds @done(20-02-04 19:49)
    ✔ CookiecordClient#loadModulesFromFolder @done(20-02-07 09:41)
    ✔ auto reload dev mode: complex but command editing (this part NOT done and not planned: so when u send a command, the bot sends a response and you edit the command the bot re-runs the command and edits its previous message) @done(20-02-07 10:41)
    ✘ argument prompting (wizards) @cancelled(20-02-07 11:08) not needed, D.js already includes awaitMessages and that's good enough IMO
    ✔ cookiecord generator cli @started(20-02-07 14:13) @done(20-02-07 16:12) @lasted(1h59m4s)
    ✘ tests with jest? @cancelled(20-02-17 12:43)
    ✔ move argument type check to module from commandParser @done(20-02-17 21:01)
    ✘ be able to compose types (arg can be a string or a number) @cancelled(20-02-17 21:21) impossible with current tech
    ✔ providers (allow functions to be passed for the prefix property etc) @done(20-02-18 08:37)
    argtypes:
        ✔ listeners @done(20-02-17 13:27)
        ✔ commands @done(20-02-17 13:27)
        ✔ text channel @done(20-02-17 20:05)
        ✔ role @done(20-02-17 20:10)
        ✘ emoji @cancelled(20-02-17 20:13) dont see the point because bot might not be in guild with the emoji 
        ✔ support all arguments listed on https://discord-akairo.github.io/#/docs/main/master/arguments/types @done(20-02-17 20:15) (all the ones that make sense)
    ✔ Context api to get the trigger that triggered the command, prefix used and stuff like that @done(20-04-09 17:41)
    ✔ docs for Context API @done(20-04-09 18:19)
    ✔ optional args @done(20-04-10 15:45)
    ✔ docs for optional args @done(20-04-10 16:00)
    ✔ add .vscode	"typescript.tsdk": "node_modules/typescript/lib" for using project's TS version to cookiecord-generator @done(20-04-11 15:42)
    ✔ move to D.js stable @done(20-04-15 16:28)
    ✔ allow ids in all the argtypes @done(20-04-15 16:46)
    ✘ listener on objects other then client @cancelled(20-04-15 18:45)
    ✔ make CommandParserModule emit events (commandUse, etc) @done(20-04-15 18:45)
    ✔ custom listener emitters @done(20-04-15 19:21)
    ✔ handle conflicting module class names better @done(20-04-15 20:11)
    ✔ add CookiecordClient#getPrefix @done(20-04-19 23:34)
    ✔ make the commandManager/listenerManager api public @done(20-04-20 00:04)
    ✔ buitlin help @done(20-04-20 00:41)
    ✔ getModuleAssociates @done(20-04-20 00:41)
	✔ update cookiecord-generator to v0.latest @done(20-04-20 00:58)
	✔ update cc to es2018 @done(20-05-08 12:25)
longterm:
    - proper docs, not just a guide (gitbook?)
    - unordered arguments
    - sharding
	- subcommands
    
features:
    - custom inhibitor handler
    - parse "strings" like this in arg
    - automated tests
    - consider injecting CookiecordClient in, so a super() call isnt required in the module class defs
    - docs for builtin HelpModule
    - add arguments to take in for builtin help command
	- add builtin inhibitor for required perms to run cmd in guild